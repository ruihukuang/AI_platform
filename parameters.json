{
  "commands": [
    "try { Get-Location } catch { Write-Host 'Error executing Get-Location: ' $_ }",
    "try { Set-Location -Path C:\\Users\\Administrator } catch { Write-Host 'Error executing Set-Location: ' $_ }",
    "try { Set-ExecutionPolicy Bypass -Scope Process -Force } catch { Write-Host 'Error executing Set-ExecutionPolicy: ' $_ }",
    "try { irm https://astral.sh/uv/0.8.3/install.ps1 | iex } catch { Write-Host 'Error executing irm: ' $_ }",
    "try { $currentPath = [Environment]::GetEnvironmentVariable('Path', 'Machine') } catch { Write-Host 'Error getting currentPath: ' $_ }",
    "try { $newPath = \"$currentPath; C:\\Users\\Administrator\\.local\\bin\" } catch { Write-Host 'Error setting newPath: ' $_ }",
    "try { [Environment]::SetEnvironmentVariable('Path', $newPath, 'Machine') } catch { Write-Host 'Error setting environment variable: ' $_ }",
    "try { Start-Process winget -ArgumentList 'winget install --id Git.Git -e --source winget' -Wait -WorkingDirectory 'C:\\Users\\Administrator' } catch { Write-Host 'Error executing winget: ' $_ }",
    "try { $gitPath = 'C:\\Program Files\\Git\\bin' } catch { Write-Host 'Error setting gitPath: ' $_ }",
    "try { [Environment]::SetEnvironmentVariable('Path', $env:Path + ';$gitPath', [EnvironmentVariableTarget]::Machine) } catch { Write-Host 'Error setting gitPath environment variable: ' $_ }",
    "try { Start-Sleep -Seconds 120 } catch { Write-Host 'Error executing Start-Sleep: ' $_ }",
    "try { Start-Process powershell -ArgumentList '-NoExit', '-Command', 'git --version; git clone https://github.com/ed-donner/agents.git; cd agents; ls; uv.exe sync' -Wait -WorkingDirectory 'C:\\Users\\Administrator' } catch { Write-Host 'Error executing Start-Process: ' $_ }",
    "if ($?) { Write-Host 'All installations, cloning, and sync completed successfully.' } else { Write-Host 'There were errors during installation, cloning, or sync.' }"
  ]
}
