AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 Window Server


Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, and HTTPS access
      VpcId: vpc-xxxxxxxx # Replace with your VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # Allows SSH from anywhere (consider restricting this for security)
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # Allows HTTP from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 # Allows HTTPS from anywhere

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: m7i-flex.large
      ImageId: ami-0d92a37881009d7a9
      KeyName: MyKeyPair # Replace with your key pair name
      SecurityGroupIds:
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          # Install uv using PowerShell
          Set-ExecutionPolicy Bypass -Scope Process -Force
          irm https://astral.sh/uv/0.8.3/install.ps1 | iex

          # Add directory to PATH
          $currentPath = [Environment]::GetEnvironmentVariable("Path", "Machine")
          $newPath = "$currentPath;C:\Path\To\Add"
          [Environment]::SetEnvironmentVariable("Path", $newPath, "Machine")

          # Install Git using winget
          winget install --id Git.Git -e --source winget

          # Check Git installation
          git --version

          # Install Cursor using winget
          winget install Anysphere.Cursor --accept-package-agreements --accept-source-agreements

          # Check for errors
          if ($?) {
            Write-Host "All installations completed successfully."
          } else {
            Write-Host "There were errors during installation."
          }
          </powershell>
